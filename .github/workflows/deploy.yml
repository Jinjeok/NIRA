name: Deploy Docusaurus to GitHub Pages

on:
  push:
    branches:
      - main # 또는 master, 혹은 배포를 원하는 브랜치 이름
  pull_request:
    branches:
      - main # 또는 master

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# GITHUB_TOKEN의 권한을 설정하여 GitHub Pages에 배포할 수 있도록 합니다.
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 모든 히스토리를 가져와서 lastmod, git-commit-date-localized 등을 사용할 수 있게 합니다.

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # 또는 프로젝트에서 사용하는 Node.js 버전
          cache: 'npm' # 또는 yarn, 프로젝트에 맞게 수정
          cache-dependency-path: ./docs/package-lock.json # Docusaurus 프로젝트의 package-lock.json 또는 yarn.lock 경로

      - name: Install dependencies
        working-directory: ./docs # Docusaurus 프로젝트 디렉토리
        run: npm ci # 또는 yarn install --frozen-lockfile

      - name: Build
        working-directory: ./docs # Docusaurus 프로젝트 디렉토리
        run: npm run build # 또는 yarn build

      # GitHub Pages 액션을 사용하여 배포합니다.
      # peaceiris/actions-gh-pages 액션은 build 폴더의 내용을 gh-pages 브랜치에 푸시합니다.
      # Docusaurus의 기본 배포 스크립트를 사용하는 방법도 있습니다. (아래 주석 참고)
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build # Docusaurus 빌드 출력 디렉토리 (루트에서 docs/build)
          # cname: your-custom-domain.com # 사용자 정의 도메인이 있다면 주석 해제

      # Docusaurus 자체 배포 명령어를 사용하는 방법 (위의 peaceiris/actions-gh-pages 대신 사용 가능)
      # - name: Deploy with Docusaurus
      #   run: |
      #     git config --global user.name "${{ github.actor }}"
      #     git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
      #     npm run deploy